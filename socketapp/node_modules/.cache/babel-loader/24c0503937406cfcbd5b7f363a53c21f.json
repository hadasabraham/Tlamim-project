{"ast":null,"code":"'use strict';\n\nconst TYPES = {\n    array: 'Array',\n    object: 'Object',\n    string: 'String',\n    date: 'Date',\n    regExp: 'RegExp',\n    function: 'Function',\n    boolean: 'Boolean',\n    number: 'Number',\n    null: 'Null',\n    undefined: 'Undefined'\n  },\n  getType = a => Object.prototype.toString.call(a).slice(8, -1),\n  isArray = a => getType(a) === TYPES.array,\n  isObject = a => getType(a) === TYPES.object,\n  isString = a => getType(a) === TYPES.string,\n  isDate = a => getType(a) === TYPES.date,\n  isRegExp = a => getType(a) === TYPES.regExp,\n  isFunction = a => getType(a) === TYPES.function,\n  isBoolean = a => getType(a) === TYPES.boolean || isString(a) && ('true' === a || 'false' === a),\n  isNumber = a => getType(a) === TYPES.number && !Number.isNaN(a),\n  isNull = a => getType(a) === TYPES.null || getType(a) === TYPES.undefined,\n  isEmpty = a => isString(a) ? '' === a.trim() : isArray(a) ? 0 === a.length : isObject(a) ? 0 === Object.keys(a).length : isNull(a),\n  isEmptyOrZero = a => isEmpty(a) || isNumber(a) && 0 === a;\nmodule.exports = {\n  isArray,\n  isObject,\n  isString,\n  isDate,\n  isRegExp,\n  isFunction,\n  isBoolean,\n  isNumber,\n  isNull,\n  isEmpty,\n  isEmptyOrZero\n};","map":null,"metadata":{},"sourceType":"script"}