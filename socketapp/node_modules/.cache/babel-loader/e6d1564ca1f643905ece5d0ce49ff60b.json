{"ast":null,"code":"var _jsxFileName = \"/Users/omeryer/Downloads/react-flask-socketio-master/socketapp/src/socketDashboard.js\";\nimport React, { useEffect, useState } from \"react\";\nimport io from 'socket.io-client';\nimport data_table from \"./dataTable\";\nclass Dashboard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      socketData: \"\",\n      socketStatus: \"On\"\n    };\n    this.handleEmit = () => {\n      if (this.state.socketStatus === \"On\") {\n        this.socket.emit(\"message\", {\n          'data': 'Stop Sending',\n          'status': 'Off'\n        });\n        this.setState({\n          'socketStatus': \"Off\"\n        });\n      } else {\n        this.socket.emit(\"message\", {\n          'data': 'Start Sending',\n          'status': 'On'\n        });\n        this.setState({\n          'socketStatus': \"On\"\n        });\n      }\n      console.log(\"Emit Clicked\");\n    };\n  }\n  componentWillUnmount() {\n    this.socket.close();\n    console.log(\"component unmounted\");\n  }\n  componentDidMount() {\n    var sensorEndpoint = \"http://localhost:5015\";\n    this.socket = io.connect(sensorEndpoint, {\n      reconnection: true,\n      transports: ['websocket']\n    });\n    console.log(\"component mounted\");\n    this.socket.on(\"responseMessage\", message => {\n      this.setState({\n        'socketData': message.data\n      });\n      console.log(\"responseMessage\", message);\n    });\n  }\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Status: \", this.state.socketStatus), React.createElement(\"div\", {\n      onClick: this.handleEmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \" Start/Stop\"), data_table(this.data.socketData));\n  }\n}\nexport default Dashboard;","map":{"version":3,"names":["React","useEffect","useState","io","data_table","Dashboard","Component","state","socketData","socketStatus","handleEmit","socket","emit","setState","console","log","componentWillUnmount","close","componentDidMount","sensorEndpoint","connect","reconnection","transports","on","message","data","render"],"sources":["/Users/omeryer/Downloads/react-flask-socketio-master/socketapp/src/socketDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport io from 'socket.io-client';\nimport data_table from \"./dataTable\";\n\n\n\nclass Dashboard extends React.Component {\n    state = {\n        socketData: \"\",\n        socketStatus:\"On\"\n    }\n\n    componentWillUnmount() {\n        this.socket.close()\n        console.log(\"component unmounted\")\n    }\n    componentDidMount() {\n        var sensorEndpoint = \"http://localhost:5015\"\n            this.socket = io.connect(sensorEndpoint, {\n            reconnection: true,\n            transports: ['websocket']\n        });\n        console.log(\"component mounted\")\n            this.socket.on(\"responseMessage\", message => {\n                this.setState({'socketData': message.data})\n                \n                console.log(\"responseMessage\", message)\n            })\n       \n    }\n    \n    handleEmit=()=>{\n        if(this.state.socketStatus===\"On\"){\n        this.socket.emit(\"message\", {'data':'Stop Sending', 'status':'Off'})\n        this.setState({'socketStatus':\"Off\"})\n    }\n    else{        \n        this.socket.emit(\"message\", {'data':'Start Sending', 'status':'On'})\n        this.setState({'socketStatus':\"On\"})\n        }\n        console.log(\"Emit Clicked\")\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n            <div>Status: {this.state.socketStatus}</div>\n            <div onClick={this.handleEmit}> Start/Stop</div>\n            {data_table(this.data.socketData)}\n            </React.Fragment>\n        )\n    }\n}\nexport default Dashboard;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,UAAU,MAAM,aAAa;AAIpC,MAAMC,SAAS,SAASL,KAAK,CAACM,SAAS,CAAC;EAAA;IAAA;IAAA,KACpCC,KAAK,GAAG;MACJC,UAAU,EAAE,EAAE;MACdC,YAAY,EAAC;IACjB,CAAC;IAAA,KAqBDC,UAAU,GAAC,MAAI;MACX,IAAG,IAAI,CAACH,KAAK,CAACE,YAAY,KAAG,IAAI,EAAC;QAClC,IAAI,CAACE,MAAM,CAACC,IAAI,CAAC,SAAS,EAAE;UAAC,MAAM,EAAC,cAAc;UAAE,QAAQ,EAAC;QAAK,CAAC,CAAC;QACpE,IAAI,CAACC,QAAQ,CAAC;UAAC,cAAc,EAAC;QAAK,CAAC,CAAC;MACzC,CAAC,MACG;QACA,IAAI,CAACF,MAAM,CAACC,IAAI,CAAC,SAAS,EAAE;UAAC,MAAM,EAAC,eAAe;UAAE,QAAQ,EAAC;QAAI,CAAC,CAAC;QACpE,IAAI,CAACC,QAAQ,CAAC;UAAC,cAAc,EAAC;QAAI,CAAC,CAAC;MACpC;MACAC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC/B,CAAC;EAAA;EA7BDC,oBAAoB,GAAG;IACnB,IAAI,CAACL,MAAM,CAACM,KAAK,EAAE;IACnBH,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EACtC;EACAG,iBAAiB,GAAG;IAChB,IAAIC,cAAc,GAAG,uBAAuB;IACxC,IAAI,CAACR,MAAM,GAAGR,EAAE,CAACiB,OAAO,CAACD,cAAc,EAAE;MACzCE,YAAY,EAAE,IAAI;MAClBC,UAAU,EAAE,CAAC,WAAW;IAC5B,CAAC,CAAC;IACFR,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAC5B,IAAI,CAACJ,MAAM,CAACY,EAAE,CAAC,iBAAiB,EAAEC,OAAO,IAAI;MACzC,IAAI,CAACX,QAAQ,CAAC;QAAC,YAAY,EAAEW,OAAO,CAACC;MAAI,CAAC,CAAC;MAE3CX,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAES,OAAO,CAAC;IAC3C,CAAC,CAAC;EAEV;EAcAE,MAAM,GAAG;IACL,OACI,oBAAC,KAAK,CAAC,QAAQ;MAAA;QAAA;QAAA;MAAA;MAAA;IAAA,GACf;MAAA;QAAA;QAAA;MAAA;MAAA;IAAA,GAAK,UAAQ,EAAC,IAAI,CAACnB,KAAK,CAACE,YAAY,CAAO,EAC5C;MAAK,OAAO,EAAE,IAAI,CAACC,UAAW;MAAA;QAAA;QAAA;MAAA;MAAA;IAAA,GAAC,aAAW,CAAM,EAC/CN,UAAU,CAAC,IAAI,CAACqB,IAAI,CAACjB,UAAU,CAAC,CAChB;EAEzB;AACJ;AACA,eAAeH,SAAS"},"metadata":{},"sourceType":"module"}