{"ast":null,"code":"var _jsxFileName = \"/Users/omeryer/Downloads/react-flask-socketio-master/socketapp/src/dataTable.js\";\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, Pressable, Button } from 'react-native';\nimport DataTable from 'react-data-table-component'; //import TcpSocket from 'react-native-tcp-socket';\n\nconst rowClicked = (row, e) => {};\n\nconst columns = [{\n  name: 'Name',\n  selector: 'nane',\n  sortable: true,\n  cell: row => React.createElement(\"div\", {\n    \"data-tag\": \"allowRowEvents\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    \"aria-hidden\": \"true\",\n    onClick: rowClicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, row.name))\n}, {\n  email: 'Email',\n  selector: 'email',\n  sortable: true\n}, {\n  status: 'Status',\n  selector: 'status',\n  sortable: true\n}];\n\nconst onExpendedRow = ({\n  data\n}) => {\n  return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"hello\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, data.hide), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"1\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"2\"));\n};\n\nconst data_table = data => {\n  return React.createElement(\"div\", {\n    className: \"candidate-table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(DataTable, {\n    title: \"Candidates\",\n    columns: columns,\n    data: data,\n    pagination: true,\n    highliightOnHover: true,\n    selectableRows: true,\n    onRowClicked: rowClicked,\n    persistTableHead: true,\n    selectableRowsHighlight: true,\n    expandableRows: true,\n    expandOnRowClicked: true,\n    expandableRowsComponent: onExpendedRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n}; // function App() {\n//   return (\n//     <div class=\"theme-1\">\n//       <p>received messages</p>\n//     </div>\n// );}\n// const io = require('socket.io-client')\n// const socket = io('localhost:4001')\n// function App () {\n//   const [messageCount, setMessageCount] = useState(0);\n//   useEffect(() => {\n//     socket.on('receive message', payload => {\n//       setMessageCount(messageCount + 1);\n//     });\n//   }, []);\n//   return (\n//     <div class=\"theme-1\">\n//       <p>received {messageCount} messages</p>\n//     </div>\n//   );\n//   const [title, setTitle] = useState(\"Candidates\");\n//   useEffect(() => {\n//     socket.on('recive messages', payload =>{\n//       setTitle(payload)\n//     });\n//   }, []);\n//   return (\n//     <div className=\"App\">\n//       {data_table(title)}\n//     </div>\n//   );\n// }\n// class App extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       response: false,\n//       endpoint: \"127.0.0.1:4001\", \n//       title: \"Candidates\",\n//     };\n//   }\n//   componentDidMount() {\n//     const { endpoint } = this.state;\n//     const socket = socketIOClient(endpoint);\n//     socket.on(\"message\", mi => this.setState({ response: mi , title: \"123\"}));\n//   }\n//   render() {\n//     return (\n//      <div className=\"App\">\n//         {data_table(this.state.title)}\n//      </div>\n//     );\n//   }\n// }\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       {data_table()}\n//     </div>\n//   );\n// }\n\n\nexport default data_table;","map":{"version":3,"sources":["/Users/omeryer/Downloads/react-flask-socketio-master/socketapp/src/dataTable.js"],"names":["React","useEffect","useState","StyleSheet","Text","View","Pressable","Button","DataTable","rowClicked","row","e","columns","name","selector","sortable","cell","email","status","onExpendedRow","data","hide","data_table"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,IAA3B,EAAiCC,SAAjC,EAA4CC,MAA5C,QAA0D,cAA1D;AAEA,OAAOC,SAAP,MAAsB,4BAAtB,C,CAEA;;AAEA,MAAMC,UAAU,GAAG,CAACC,GAAD,EAAMC,CAAN,KAAY,CAC9B,CADD;;AAGA,MAAMC,OAAO,GAAG,CACZ;AACIC,EAAAA,IAAI,EAAE,MADV;AACkBC,EAAAA,QAAQ,EAAE,MAD5B;AACoCC,EAAAA,QAAQ,EAAE,IAD9C;AAEIC,EAAAA,IAAI,EAAEN,GAAG,IACL;AAAK,gBAAS,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,mBAAY,MAAjB;AAAwB,IAAA,OAAO,EAAED,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,GAAG,CAACG,IADT,CADJ;AAHR,CADY,EAWZ;AAAEI,EAAAA,KAAK,EAAE,OAAT;AAAkBH,EAAAA,QAAQ,EAAE,OAA5B;AAAqCC,EAAAA,QAAQ,EAAE;AAA/C,CAXY,EAYZ;AAAEG,EAAAA,MAAM,EAAE,QAAV;AAAoBJ,EAAAA,QAAQ,EAAE,QAA9B;AAAwCC,EAAAA,QAAQ,EAAE;AAAlD,CAZY,CAAhB;;AAgBA,MAAMI,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAEhC,SACI,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,IAAI,CAACC,IAAT,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ,CADJ;AAQH,CAVD;;AAYA,MAAMC,UAAU,GAAIF,IAAD,IAAU;AACzB,SACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,YADV;AAEI,IAAA,OAAO,EAAER,OAFb;AAGI,IAAA,IAAI,EAAEQ,IAHV;AAII,IAAA,UAAU,MAJd;AAKI,IAAA,iBAAiB,MALrB;AAMI,IAAA,cAAc,MANlB;AAOI,IAAA,YAAY,EAAEX,UAPlB;AAQI,IAAA,gBAAgB,MARpB;AASI,IAAA,uBAAuB,MAT3B;AAUI,IAAA,cAAc,MAVlB;AAWI,IAAA,kBAAkB,MAXtB;AAYI,IAAA,uBAAuB,EAAEU,aAZ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAkBH,CAnBD,C,CAsBA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeG,UAAf","sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, Pressable, Button } from 'react-native';\n\nimport DataTable from 'react-data-table-component';\n\n//import TcpSocket from 'react-native-tcp-socket';\n\nconst rowClicked = (row, e) => {\n};\n\nconst columns = [\n    {\n        name: 'Name', selector: 'nane', sortable: true,\n        cell: row => (\n            <div data-tag=\"allowRowEvents\">\n                <div aria-hidden=\"true\" onClick={rowClicked}>\n                    {row.name}\n                </div>\n            </div>\n        ),\n    },\n    { email: 'Email', selector: 'email', sortable: true },\n    { status: 'Status', selector: 'status', sortable: true }\n];\n\n\nconst onExpendedRow = ({ data }) => {\n\n    return (\n        <>\n            <p>hello</p>\n            <p>{data.hide}</p>\n            <p>1</p>\n            <p>2</p>\n        </>\n    );\n};\n\nconst data_table = (data) => {\n    return (\n        <div className=\"candidate-table\">\n            <DataTable\n                title='Candidates'\n                columns={columns}\n                data={data}\n                pagination\n                highliightOnHover\n                selectableRows\n                onRowClicked={rowClicked}\n                persistTableHead\n                selectableRowsHighlight\n                expandableRows\n                expandOnRowClicked\n                expandableRowsComponent={onExpendedRow}\n            />\n        </div>\n    );\n};\n\n\n// function App() {\n//   return (\n//     <div class=\"theme-1\">\n//       <p>received messages</p>\n//     </div>\n// );}\n\n\n// const io = require('socket.io-client')\n// const socket = io('localhost:4001')\n\n// function App () {\n//   const [messageCount, setMessageCount] = useState(0);\n\n//   useEffect(() => {\n//     socket.on('receive message', payload => {\n//       setMessageCount(messageCount + 1);\n//     });\n//   }, []);\n\n//   return (\n//     <div class=\"theme-1\">\n//       <p>received {messageCount} messages</p>\n//     </div>\n//   );\n//   const [title, setTitle] = useState(\"Candidates\");\n//   useEffect(() => {\n//     socket.on('recive messages', payload =>{\n//       setTitle(payload)\n//     });\n//   }, []);\n//   return (\n//     <div className=\"App\">\n//       {data_table(title)}\n//     </div>\n//   );\n// }\n\n\n// class App extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       response: false,\n//       endpoint: \"127.0.0.1:4001\", \n//       title: \"Candidates\",\n//     };\n//   }\n//   componentDidMount() {\n//     const { endpoint } = this.state;\n//     const socket = socketIOClient(endpoint);\n//     socket.on(\"message\", mi => this.setState({ response: mi , title: \"123\"}));\n//   }\n//   render() {\n//     return (\n//      <div className=\"App\">\n//         {data_table(this.state.title)}\n//      </div>\n//     );\n//   }\n// }\n\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       {data_table()}\n//     </div>\n//   );\n// }\n\nexport default data_table;\n"]},"metadata":{},"sourceType":"module"}