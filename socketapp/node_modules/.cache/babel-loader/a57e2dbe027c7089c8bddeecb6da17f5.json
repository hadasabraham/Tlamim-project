{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"behavior\", \"contentContainerStyle\", \"keyboardVerticalOffset\"];\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport View from '../View';\nclass KeyboardAvoidingView extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.frame = null;\n    this.onLayout = event => {\n      this.frame = event.nativeEvent.layout;\n    };\n  }\n  relativeKeyboardHeight(keyboardFrame) {\n    var frame = this.frame;\n    if (!frame || !keyboardFrame) {\n      return 0;\n    }\n    var keyboardY = keyboardFrame.screenY - (this.props.keyboardVerticalOffset || 0);\n    return Math.max(frame.y + frame.height - keyboardY, 0);\n  }\n  onKeyboardChange(event) {}\n  render() {\n    var _this$props = this.props,\n      behavior = _this$props.behavior,\n      contentContainerStyle = _this$props.contentContainerStyle,\n      keyboardVerticalOffset = _this$props.keyboardVerticalOffset,\n      rest = _objectWithoutPropertiesLoose(_this$props, _excluded);\n    return /*#__PURE__*/React.createElement(View, _extends({\n      onLayout: this.onLayout\n    }, rest));\n  }\n}\nexport default KeyboardAvoidingView;","map":null,"metadata":{},"sourceType":"module"}